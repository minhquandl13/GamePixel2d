1
00:00:01,360 --> 00:00:04,240
yeah like this

2
00:00:06,879 --> 00:00:16,560
so you can see the program is maintaining 60 fps so this is working good

5
00:00:14,400 --> 00:00:21,760
okay now we are going to create Player class

7
00:00:18,160 --> 00:00:21,760
first, create another package

8
00:00:22,560 --> 00:00:29,199
and i'm gonna name this "entity"

10
00:00:27,119 --> 00:00:35,760
so we're gonna create all the character class

12
00:00:33,840 --> 00:00:38,719
player, monster, npc, stuff like that

13
00:00:35,760 --> 00:00:40,800
then inside of this entity package

14
00:00:38,719 --> 00:00:43,360
create a class called Entity

16
00:00:43,440 --> 00:00:54,399
and this will be the parent class for the Player class and any other character classes

19
00:00:52,079 --> 00:00:58,399
and inside of this Entity class we create some variables

26
00:01:07,920 --> 00:01:12,560
okay so that's it for now

27
00:01:10,720 --> 00:01:15,600
now let's create the Player class

29
00:01:14,400 --> 00:01:22,240
so inside of this entity package, create Player

33
00:01:22,960 --> 00:01:35,200
and this extends Entity

36
00:01:30,000 --> 00:01:36,720
and we're gonna use this GamePanel class

37
00:01:35,200 --> 00:01:40,360
and also KeyHandler

39
00:01:40,560 --> 00:01:50,240
so import...this one i think

42
00:01:49,360 --> 00:01:53,119
and constructor

46
00:01:55,040 --> 00:02:03,040
and we get GamePanel, also KeyHandler

53
00:02:16,080 --> 00:02:21,840
and go back to this GamePanel class

54
00:02:19,520 --> 00:02:26,400
we're gonna instantiate this Player class

59
00:02:29,680 --> 00:02:37,239
and we're gonna pass this GamePanel class and KeyHandler

62
00:02:40,800 --> 00:02:49,360
so now we can use this GamePanel and KeyHandler in this Player class

64
00:02:47,760 --> 00:02:53,760
and then we're gonna create a method

71
00:03:01,519 --> 00:03:07,840
and inside we're gonna set the player's default values

73
00:03:06,080 --> 00:03:12,720
and the first, x equal 100 for now

76
00:03:11,519 --> 00:03:17,360
and y equal 100

79
00:03:15,680 --> 00:03:20,239
and speed equal 4

81
00:03:20,319 --> 00:03:26,080
so maybe you have noticed

83
00:03:24,000 --> 00:03:34,159
what we are doing here is the same as what we did inside of this GamePanel class

86
00:03:30,879 --> 00:03:36,319
but this was just for testing

87
00:03:34,159 --> 00:03:47,599
although we update the player information and draw the player in this GamePanel class 

90
00:03:42,879 --> 00:03:50,480
right now it's only about the player 

91
00:03:47,599 --> 00:03:57,040
but in the future we will update and draw more stuff like background tiles or monsters or npcs

94
00:03:56,000 --> 00:04:05,840
if we type everything here, then it's going to be a huge chunk of code

98
00:04:03,920 --> 00:04:13,040
you can do that but it would be better if we can handle it in a bit more organized way

101
00:04:11,920 --> 00:04:25,440
so we create this update method in this Player class too

106
00:04:22,639 --> 00:04:29,400
and also draw method

108
00:04:29,600 --> 00:04:36,800
and we copy everything inside of this update

110
00:04:36,960 --> 00:04:44,720
copy... or move everything here

113
00:04:43,280 --> 00:04:50,320
and also this one

116
00:04:48,080 --> 00:04:57,840
we're gonna move these two lines to inside of this draw method

119
00:05:00,160 --> 00:05:06,880
and here, we just type

123
00:05:06,880 --> 00:05:13,520
so we just call this method inside of this Player class

128
00:05:19,039 --> 00:05:25,680
and make sure to pass this Graphics2D

129
00:05:22,800 --> 00:05:27,280
without this we cannot draw anything

130
00:05:25,680 --> 00:05:35,840
so we receive this Graphics2D here

136
00:05:36,639 --> 00:05:44,320
so now we can use this g2 inside of this Player class too

138
00:05:41,520 --> 00:05:49,840
now we are seeing some errors so we need to do a little adjustment

140
00:05:46,639 --> 00:05:54,240
so this time instead of this playerY, playerX, or playerSpeed

142
00:05:51,600 --> 00:06:04,440
we will use y and x and speed

151
00:06:15,759 --> 00:06:25,120
we're gonna just use tileSize in this GamePanel class

153
00:06:21,440 --> 00:06:28,080
okay i think we need to make this public

156
00:06:35,759 --> 00:06:43,520
this needs to be public so otherwise the Player class cannot access this

159
00:06:43,520 --> 00:06:49,039
so we named this just x, y, and speed 

160
00:06:46,080 --> 00:06:51,919
not playerX, playerY, playerSpeed

161
00:06:49,039 --> 00:07:00,560
because other non-player characters also use these variables

163
00:06:56,080 --> 00:07:03,840
also let's call this method from this constructor

165
00:07:04,639 --> 00:07:11,599
so we're gonna set these default values

166
00:07:07,759 --> 00:07:11,599
okay so let's check this

168
00:07:13,680 --> 00:07:18,720
so the rectangle is moving just like before

170
00:07:19,280 --> 00:07:25,039
but moving a rectangle is not that fun

171
00:07:21,840 --> 00:07:27,199
so let's replace it with character sprites

174
00:07:27,199 --> 00:07:36,639
i prepared this so these are the player character sprites that i made

176
00:07:32,720 --> 00:07:41,440
i prepared 8 images. 2 for down and 2 for left

177
00:07:36,639 --> 00:07:44,240
and 2 for right and 2 for up

178
00:07:41,440 --> 00:07:50,800
2 images for each direction so we can create a little animation

181
00:07:47,360 --> 00:07:57,440
i know my pixel art skill is pretty rudimentary so i think you can create better one

184
00:07:54,800 --> 00:08:00,319
to create these sprites you can use any software

185
00:07:57,440 --> 00:08:06,000
you can use Paint, Photoshop, Gimp, anything is fine

188
00:08:02,800 --> 00:08:11,280
maybe i will create a little video to show how i make these sprites later

191
00:08:11,280 --> 00:08:22,240
just make sure that the size is 16 by 16 and the background is transparent

194
00:08:19,280 --> 00:08:23,440
and save it as PNG

195
00:08:22,240 --> 00:08:29,520
we're going to create a "res" folder

199
00:08:32,479 --> 00:08:37,279
and inside of this we're going to create a package

201
00:08:36,000 --> 00:08:42,159
we'll name this "player"

203
00:08:40,240 --> 00:08:51,360
we're gonna copy these images to this player package

208
00:08:52,839 --> 00:08:57,760
so now let's go to this Entity

209
00:08:56,480 --> 00:09:01,839
and we add another variables

220
00:09:16,720 --> 00:09:22,640
and another variable

226
00:09:30,800 --> 00:09:37,200
and import BufferedImage

227
00:09:34,480 --> 00:09:39,600
okay let's go to this Player class

228
00:09:37,200 --> 00:09:40,560
and now let's create another method

241
00:10:06,240 --> 00:10:14,000
and inside of this try and catch we're gonna load these images

249
00:10:27,519 --> 00:10:34,480
and inside of this bracket we type the file path

251
00:10:31,360 --> 00:10:40,399
and since it's inside of this player package in this res folder

260
00:10:52,399 --> 00:10:59,040
so let's copy

279
00:11:26,959 --> 00:11:32,320
okay and let's call this method

282
00:11:35,120 --> 00:11:41,360
also let's set the default direction

288
00:11:48,959 --> 00:11:56,959
inside of this if statement we add direction information

291
00:11:55,680 --> 00:11:58,639
so if up is pressed, direction is up

295
00:12:03,200 --> 00:12:12,160
and if down is pressed, direction is down

303
00:12:26,000 --> 00:12:30,320
and go to this draw method

305
00:12:30,320 --> 00:12:37,320
we're not gonna use this anymore

306
00:12:33,200 --> 00:12:37,320
we're not gonna use this rectangle

312
00:12:51,040 --> 00:13:00,560
create a switch statement or an if statement... either way is fine

315
00:12:59,200 --> 00:13:03,040
we're gonna check direction

318
00:13:03,040 --> 00:13:09,519
if direction is up...

321
00:13:13,440 --> 00:13:18,399
and if direction is down...

326
00:13:46,480 --> 00:13:54,720
so these are these BufferedImages we loaded a while ago

329
00:13:53,920 --> 00:14:00,639
so based on this direction we pick a different image

331
00:13:57,360 --> 00:14:06,240
and finally we're gonna draw images

337
00:14:10,959 --> 00:14:17,839
we're gonna type x and y

339
00:14:14,880 --> 00:14:21,680
and also type width and height

340
00:14:17,839 --> 00:14:23,279
so we're gonna just use this tileSize

345
00:14:34,560 --> 00:14:45,360
this is called the ImageObserver and you just can type "null" here

348
00:14:41,760 --> 00:14:51,120
so we're gonna draw image at x and y with this size

350
00:14:48,160 --> 00:14:51,120
so let's check this

354
00:14:56,880 --> 00:15:01,839
so this Blue Boy appeared

355
00:14:59,519 --> 00:15:03,519
the player character appeared

356
00:15:01,839 --> 00:15:10,399
so now instead of white rectangle we can control this blue boy 

360
00:15:10,839 --> 00:15:21,920
but it doesn't look like he's walking

363
00:15:18,079 --> 00:15:24,320
he's more like skidding or something

364
00:15:21,920 --> 00:15:32,959
that's because we only used this up1, down1, left1, right1

366
00:15:28,079 --> 00:15:40,800
we haven't used this up2, down2, left2, right2

370
00:15:38,079 --> 00:15:48,800
so next we will use this number two images too and create a working animation

374
00:15:48,800 --> 00:15:56,560
let's go to this Entity class again

379
00:15:59,920 --> 00:16:05,920
and start from zero

386
00:16:13,199 --> 00:16:16,639
go back to this Player class

387
00:16:17,040 --> 00:16:25,040
inside of this draw method we're gonna add a little if statement

406
00:16:58,160 --> 00:17:02,720
i think i'm gonna just copy

421
00:17:52,400 --> 00:18:00,720
and now we're gonna create a simple sprite changer or something like that

424
00:17:59,600 --> 00:18:10,480
so inside of this update, first we're going to add spriteCounter

454
00:18:59,120 --> 00:19:06,799
and after that we reset this spriteCounter

457
00:19:08,400 --> 00:19:12,720
let me explain a little bit 

458
00:19:11,280 --> 00:19:20,640
this update method gets called 60 times per second

462
00:19:20,640 --> 00:19:24,240
uh here

463
00:19:21,840 --> 00:19:33,440
because this is inside of this game loop. this gets called 60 times per second

466
00:19:29,840 --> 00:19:39,840
so in every frame this gets called and increases this counter by 1

469
00:19:38,960 --> 00:19:43,679
and if it hits 10

471
00:19:41,840 --> 00:19:46,640
it changes the sprite

472
00:19:43,679 --> 00:19:48,960
so 1 to 2 or 2 to 1

473
00:19:46,640 --> 00:19:55,520
it means the player image changes in every 10 frames

475
00:19:53,360 --> 00:20:02,679
and it's gonna draw image1 or image2 on the screen

477
00:19:57,600 --> 00:20:02,679
so let's check this

478
00:20:02,960 --> 00:20:05,960
hmm

479
00:20:10,080 --> 00:20:19,480
okay so maybe 10 is a bit too fast so change this to 12

482
00:20:26,000 --> 00:20:28,880
okay i think

483
00:20:29,600 --> 00:20:35,120
but there is still a little issue here

484
00:20:32,320 --> 00:20:39,760
as you can see the player character is moving when you are not pressing any keys

488
00:20:39,760 --> 00:20:47,280
if you feel okay with this then okay

489
00:20:42,720 --> 00:20:50,559
actually some retro games are like this

490
00:20:47,280 --> 00:20:55,520
but if you don't like this we can fix this

492
00:20:52,320 --> 00:21:00,960
right now the spriteCounter increases every time this update gets called

494
00:20:57,520 --> 00:21:05,280
but we're gonna add this if statement

509
00:21:48,000 --> 00:21:59,159
and we're gonna move everything inside of this if statement

511
00:22:01,440 --> 00:22:13,840
so now this spriteCounter increases only when you are pressing one of these keys

515
00:22:10,640 --> 00:22:19,679
so the player sprite doesn't change unless you press a key

517
00:22:16,559 --> 00:22:19,679
yeah let's check this

518
00:22:19,840 --> 00:22:24,000
so right now he's not moving 

519
00:22:22,799 --> 00:22:29,679
but if you press a key

521
00:22:26,559 --> 00:22:29,679
he moves like this

522
00:22:39,760 --> 00:22:45,919
okay so now our player character is moving

524
00:22:43,280 --> 00:22:49,280
so next i think we're gonna implement background tiles

526
00:22:47,919 --> 00:22:54,200
so not this black background anymore

528
00:22:52,559 --> 00:23:06,060
so let's do that

529
00:22:54,200 --> 00:23:06,060
[Music]

