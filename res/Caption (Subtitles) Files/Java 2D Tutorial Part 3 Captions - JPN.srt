1
00:00:01,360 --> 00:00:04,240
こんな感じです

2
00:00:06,879 --> 00:00:16,560
プログラムが60FPSを維持していることがわかります

5
00:00:14,400 --> 00:00:21,760
それではPlayerクラスを作成しましょう

7
00:00:18,160 --> 00:00:21,760
まず新しいパッケージを作成します

8
00:00:22,560 --> 00:00:29,199
名前は"entity"とします

10
00:00:27,119 --> 00:00:35,760
この中にキャラクター系のクラスを作っていきます

12
00:00:33,840 --> 00:00:38,719
プレイヤーやモンスター、NPCなどですね

13
00:00:35,760 --> 00:00:40,800
続いてこのentityパッケージの中に

14
00:00:38,719 --> 00:00:43,360
Entityというクラスを作成します

16
00:00:43,440 --> 00:00:54,399
これはプレイヤーやその他のキャラクタークラスの親クラスとなるものです

19
00:00:52,079 --> 00:00:58,399
この中でいくつかの変数を宣言します

26
00:01:07,920 --> 00:01:12,560
とりあえずこんなところです

27
00:01:10,720 --> 00:01:15,600
ではプレイヤークラスを作成しましょう

29
00:01:14,400 --> 00:01:22,240
このentityパッケージの中に作成します

33
00:01:22,960 --> 00:01:35,200
そしてEntityを継承します

36
00:01:30,000 --> 00:01:36,720
ここではGamePanelクラスと

37
00:01:35,200 --> 00:01:40,360
KeyHandlerクラスを使用します

39
00:01:40,560 --> 00:01:50,240
なのでインポートします…これですね

42
00:01:49,360 --> 00:01:53,119
続いてコンストラクタです

46
00:01:55,040 --> 00:02:03,040
ここでGamePanelとKeyHandlerを受け取ります

53
00:02:16,080 --> 00:02:21,840
GamePanelクラスに戻り

54
00:02:19,520 --> 00:02:26,400
ここでPlayerクラスをインスタンス化します

59
00:02:29,680 --> 00:02:37,239
そしてこのGamePanelクラスとKeyHandlerを渡します

62
00:02:40,800 --> 00:02:49,360
これでPlayerクラスの中でGamePanelとKeyHandlerが使えるようになりました

64
00:02:47,760 --> 00:02:53,760
続いてメソッドを作ります

71
00:03:01,519 --> 00:03:07,840
この中でプレイヤーの初期値を設定します

73
00:03:06,080 --> 00:03:12,720
まずはX座標を100とし

76
00:03:11,519 --> 00:03:17,360
Y座標も100としておきます

79
00:03:15,680 --> 00:03:20,239
速度は4

81
00:03:20,319 --> 00:03:26,080
気づいたかもしれませんが

83
00:03:24,000 --> 00:03:34,159
以前にGamePanelでやったのと同じことをしています

86
00:03:30,879 --> 00:03:36,319
ただこちらはテストのために入力しただけです

87
00:03:34,159 --> 00:03:47,599
前回私たちはGamePanelクラスの中でプレイヤーの情報を更新し、描画しました

90
00:03:42,879 --> 00:03:50,480
今はプレイヤーだけですが

91
00:03:47,599 --> 00:03:57,040
将来的には背景タイルやモンスター、NPCなど、いろいろなものを描画していくことになります

94
00:03:56,000 --> 00:04:05,840
それらをすべてここに打ち込むと、コードがめちゃくちゃ長くなってしまいます

98
00:04:03,920 --> 00:04:13,040
それも可能ではありますが、もう少し整理した形でコードを書くほうが望ましいです

101
00:04:11,920 --> 00:04:25,440
なので、このPlayerクラスの中にもupdateメソッドを作成します

106
00:04:22,639 --> 00:04:29,400
それからdrawメソッドも

108
00:04:29,600 --> 00:04:36,800
そしてこのupdateの中にあるすべてをコピーし

110
00:04:36,960 --> 00:04:44,720
コピーというか移動ですね　ここに移動させます

113
00:04:43,280 --> 00:04:50,320
それからこれも

116
00:04:48,080 --> 00:04:57,840
この２行をこのdrawメソッドの中に移動させます

119
00:05:00,160 --> 00:05:06,880
そしてここにはこう入力します

123
00:05:06,880 --> 00:05:13,520
Playerクラスの中にあるメソッドを呼ぶ、という形です

128
00:05:19,039 --> 00:05:25,680
ここでGraphics2Dを渡すようにしてください

129
00:05:22,800 --> 00:05:27,280
これがないと描画ができないので

130
00:05:25,680 --> 00:05:35,840
というわけでここでGraphics2Dを受け取ります

136
00:05:36,639 --> 00:05:44,320
これでPlayerクラスの中でもg2が使えるようになりました

138
00:05:41,520 --> 00:05:49,840
ただエラーが発生しているので、これを直していきましょう

140
00:05:46,639 --> 00:05:54,240
今回はplayerY、playerX、playerSpeedではなく

142
00:05:51,600 --> 00:06:04,440
ただのy、x、speedとします

151
00:06:15,759 --> 00:06:25,120
GamePanelクラスにあるtileSizeを使用します

153
00:06:21,440 --> 00:06:28,080
これはpublicにする必要ありました

156
00:06:35,759 --> 00:06:43,520
publicでないとPlayerクラスからはアクセスできないので

159
00:06:43,520 --> 00:06:49,039
これらの変数をplayerX、playerY、playerSpeedではなく

160
00:06:46,080 --> 00:06:51,919
ただx、y、speedとしたのは

161
00:06:49,039 --> 00:07:00,560
プレイヤー以外のキャラクターも使用することになるからです

163
00:06:56,080 --> 00:07:03,840
あとこのメソッドをコンストラクタから呼びましょう

165
00:07:04,639 --> 00:07:11,599
これで初期値が設定されます

166
00:07:07,759 --> 00:07:11,599
実行してみましょう

168
00:07:13,680 --> 00:07:18,720
以前のように四角形を動かせます

170
00:07:19,280 --> 00:07:25,039
ただ四角形を動かしていてもあまり面白くないので

171
00:07:21,840 --> 00:07:27,199
これをキャラクターに置き換えましょう

174
00:07:27,199 --> 00:07:36,639
これは私が作成したプレイヤーキャラクターです

176
00:07:32,720 --> 00:07:41,440
８種類あります　下向きに２枚、左向きに２枚

177
00:07:36,639 --> 00:07:44,240
右向きに２枚、上向きに２枚です

178
00:07:41,440 --> 00:07:50,800
各方向に２種類の画像を用意することで、アニメーションを作ることができます

181
00:07:47,360 --> 00:07:57,440
私はピクセルアートが下手なので、あなたならきっともっと良い画像を作れると思います

184
00:07:54,800 --> 00:08:00,319
画像作成にはどんなソフトを使っても構いません

185
00:07:57,440 --> 00:08:06,000
ペイントでもPhotoshopでもGimpでも、なんでもいいです

188
00:08:02,800 --> 00:08:11,280
ひょっとしたらこういう画像作成のチュートリアル動画もあとで作るかもしれません

191
00:08:11,280 --> 00:08:22,240
画像は16x16で、背景は透明にするようにし、

194
00:08:19,280 --> 00:08:23,440
PNGで保存します

195
00:08:22,240 --> 00:08:29,520
今度は"res（リソース）"フォルダを作成します

199
00:08:32,479 --> 00:08:37,279
この中にパッケージを作り

201
00:08:36,000 --> 00:08:42,159
playerと名付けます

203
00:08:40,240 --> 00:08:51,360
これらの画像をplayerパッケージにコピーします

208
00:08:52,839 --> 00:08:57,760
続いてEntityに移動し

209
00:08:56,480 --> 00:09:01,839
変数を追加します

220
00:09:16,720 --> 00:09:22,640
さらに変数を追加します

226
00:09:30,800 --> 00:09:37,200
BufferedImageをインポートします

227
00:09:34,480 --> 00:09:39,600
Playerクラスに移動しましょう

228
00:09:37,200 --> 00:09:40,560
新たなメソッドを作成します

241
00:10:06,240 --> 00:10:14,000
このtry & catchの中で画像を読み込みます

249
00:10:27,519 --> 00:10:34,480
そしてこのカッコの中にファイルのパスを入力します

251
00:10:31,360 --> 00:10:40,399
resフォルダのplayerパッケージの中にあるので…

260
00:10:52,399 --> 00:10:59,040
コピーしましょう

279
00:11:26,959 --> 00:11:32,320
ではこのメソッドを呼びましょう

282
00:11:35,120 --> 00:11:41,360
それから方向を設定します

288
00:11:48,959 --> 00:11:56,959
このif文の中に方向に関する情報を追加します

291
00:11:55,680 --> 00:11:58,639
上が押されたら、方向は上

295
00:12:03,200 --> 00:12:12,160
下が押されたら、方向は下です

303
00:12:26,000 --> 00:12:30,320
drawメソッドに移動して

305
00:12:30,320 --> 00:12:37,320
これはもう使わないです

306
00:12:33,200 --> 00:12:37,320
四角形はもう使わないので

312
00:12:51,040 --> 00:13:00,560
ここにswitchまたはif文を作成します　どちらでも大丈夫です

315
00:12:59,200 --> 00:13:03,040
方向をチェックします

318
00:13:03,040 --> 00:13:09,519
方向が上なら…

321
00:13:13,440 --> 00:13:18,399
方向が下なら…

326
00:13:46,480 --> 00:13:54,720
これらは先程読み込んだBufferedImageです

329
00:13:53,920 --> 00:14:00,639
この方向情報をもとに、異なる画像を選択します

331
00:13:57,360 --> 00:14:06,240
最後に画像を描画します

337
00:14:10,959 --> 00:14:17,839
ここではX座標とY座標

339
00:14:14,880 --> 00:14:21,680
それに画像の幅と高さを入力します

340
00:14:17,839 --> 00:14:23,279
tileSizeを使います

345
00:14:34,560 --> 00:14:45,360
こちらはImageObserverというパラメータですが、ここは単に"null"とします

348
00:14:41,760 --> 00:14:51,120
つまりxとyの位置に、このサイズで画像を描画するということです

350
00:14:48,160 --> 00:14:51,120
実行してみましょう

354
00:14:56,880 --> 00:15:01,839
"ブルーボーイ"が出現しました

355
00:14:59,519 --> 00:15:03,519
これがプレイヤーキャラクターです

356
00:15:01,839 --> 00:15:10,399
これで四角形ではなく、ブルーボーイを操作できるようになりました

360
00:15:10,839 --> 00:15:21,920
ただ歩いているようには見えませんね

363
00:15:18,079 --> 00:15:24,320
歩くというより、滑っているような感じです

364
00:15:21,920 --> 00:15:32,959
理由はup1、down1、left1、right1しか使ってないからです

366
00:15:28,079 --> 00:15:40,800
up2, down2, left2, right2を使っていません

370
00:15:38,079 --> 00:15:48,800
なので今度はこの２番目の画像も使ってアニメーションを作ります

374
00:15:48,800 --> 00:15:56,560
Entityクラスに戻りましょう

379
00:15:59,920 --> 00:16:05,920
初期値は0です

386
00:16:13,199 --> 00:16:16,639
Playerクラスに戻ります

387
00:16:17,040 --> 00:16:25,040
drawメソッドの中にif文を作成します

406
00:16:58,160 --> 00:17:02,720
コピーしたほうが早いですね

421
00:17:52,400 --> 00:18:00,720
今度はシンプルな画像変換システムを作ります

424
00:17:59,600 --> 00:18:10,480
updateメソッドの中で、spriteCounterを１増やします

454
00:18:59,120 --> 00:19:06,799
その後にspriteCounterをリセットします

457
00:19:08,400 --> 00:19:12,720
少し説明します

458
00:19:11,280 --> 00:19:20,640
このupdateメソッドは１秒間に60回呼ばれます

462
00:19:20,640 --> 00:19:24,240
ここですね

463
00:19:21,840 --> 00:19:33,440
これはゲームループの中にあるので、１秒間に60回呼ばれるのです

466
00:19:29,840 --> 00:19:39,840
つまり１フレーム（ループ）ごとに、このカウンターが１増加することになります

469
00:19:38,960 --> 00:19:43,679
そしてそれが10に達したら

471
00:19:41,840 --> 00:19:46,640
画像を変更します

472
00:19:43,679 --> 00:19:48,960
１から２へ　または２から１へと

473
00:19:46,640 --> 00:19:55,520
つまり10フレームごとにプレイヤーの画像が変わるということです

475
00:19:53,360 --> 00:20:02,679
これで画像１または２が画面に描画されることになります

477
00:19:57,600 --> 00:20:02,679
実行してみましょう

478
00:20:02,960 --> 00:20:05,960
うーん

479
00:20:10,080 --> 00:20:19,480
10だとちょっと速過ぎる気がするので12にしてみます

482
00:20:26,000 --> 00:20:28,880
まあいいですかね

483
00:20:29,600 --> 00:20:35,120
ただまだ少し問題があります

484
00:20:32,320 --> 00:20:39,760
見ての通り、現状はなにもキーを押していなくてもキャラクターが動き続けています

488
00:20:39,760 --> 00:20:47,280
これで問題ないと思われるなら、このままで大丈夫です

489
00:20:42,720 --> 00:20:50,559
実際昔のゲームではよく見られる形です

490
00:20:47,280 --> 00:20:55,520
でもこれだと嫌だという場合は、修正が可能です

492
00:20:52,320 --> 00:21:00,960
現在はこのupdateが呼ばれるたびにspriteCounterが増加するので

494
00:20:57,520 --> 00:21:05,280
if文を追加します

509
00:21:48,000 --> 00:21:59,159
そして全部をこのif文の中に移動させます

511
00:22:01,440 --> 00:22:13,840
これでspriteCounterは、なにかキーが押されているときだけ増加するようになりました

515
00:22:10,640 --> 00:22:19,679
つまりキーを押さないかぎりプレイヤーの画像は変わりません

517
00:22:16,559 --> 00:22:19,679
実行してみましょう

518
00:22:19,840 --> 00:22:24,000
現在プレイヤーは静止しています

519
00:22:22,799 --> 00:22:29,679
でもキーを押すと

521
00:22:26,559 --> 00:22:29,679
このように動きます

522
00:22:39,760 --> 00:22:45,919
これでプレイヤーキャラクターが動くようになりました

524
00:22:43,280 --> 00:22:49,280
次回は背景タイルを追加します

526
00:22:47,919 --> 00:22:54,200
黒の背景のままじゃつまらないですから

528
00:22:52,559 --> 00:23:06,060
背景を作りましょう

529
00:22:54,200 --> 00:23:06,060
[Music]

